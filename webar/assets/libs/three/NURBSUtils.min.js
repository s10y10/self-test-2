THREE.NURBSUtils={findSpan:function(r,a,i){var n=i.length-r-1;if(a>=i[n])return n-1;if(a<=i[r])return r;for(var c=r,o=n,t=Math.floor((c+o)/2);a<i[t]||a>=i[t+1];)a<i[t]?o=t:c=t,t=Math.floor((c+o)/2);return t},calcBasisFunctions:function(r,a,i,n){for(var c=[],o=[],t=[],e=c[0]=1;e<=i;++e){o[e]=a-n[r+1-e],t[e]=n[r+e]-a;for(var l=0,v=0;v<e;++v){var f=t[v+1],s=o[e-v],u=c[v]/(f+s);c[v]=l+f*u,l=s*u}c[e]=l}return c},calcBSplinePoint:function(r,a,i,n){for(var c=this.findSpan(r,n,a),o=this.calcBasisFunctions(c,n,r,a),t=new THREE.Vector4(0,0,0,0),e=0;e<=r;++e){var l=i[c-r+e],v=o[e],f=l.w*v;t.x+=l.x*f,t.y+=l.y*f,t.z+=l.z*f,t.w+=l.w*v}return t},calcBasisFunctionDerivatives:function(r,a,i,n,c){for(var o=[],t=0;t<=i;++t)o[t]=0;var e=[];for(t=0;t<=n;++t)e[t]=o.slice(0);var l=[];for(t=0;t<=i;++t)l[t]=o.slice(0);l[0][0]=1;for(var v=o.slice(0),f=o.slice(0),s=1;s<=i;++s){v[s]=a-c[r+1-s],f[s]=c[r+s]-a;for(var u=0,S=0;S<s;++S){var h=f[S+1],d=v[s-S];l[s][S]=h+d;var E=l[S][s-1]/l[s][S];l[S][s]=u+h*E,u=d*E}l[s][s]=u}for(s=0;s<=i;++s)e[0][s]=l[s][i];for(S=0;S<=i;++S){var p=0,w=1,y=[];for(t=0;t<=i;++t)y[t]=o.slice(0);for(var B=y[0][0]=1;B<=n;++B){var R=0,D=S-B,H=i-B;B<=S&&(y[w][0]=y[p][0]/l[H+1][D],R=y[w][0]*l[D][H]);var T=S-1<=H?B-1:i-S;for(s=-1<=D?1:-D;s<=T;++s)y[w][s]=(y[p][s]-y[p][s-1])/l[H+1][D+s],R+=y[w][s]*l[D+s][H];S<=H&&(y[w][B]=-y[p][B-1]/l[H+1][S],R+=y[w][B]*l[S][H]),e[B][S]=R;s=p;p=w,w=s}}for(S=i,B=1;B<=n;++B){for(s=0;s<=i;++s)e[B][s]*=S;S*=i-B}return e},calcBSplineDerivatives:function(r,a,i,n,c){for(var o=c<r?c:r,t=[],e=this.findSpan(r,n,a),l=this.calcBasisFunctionDerivatives(e,n,r,o,a),v=[],f=0;f<i.length;++f){var s=(S=i[f].clone()).w;S.x*=s,S.y*=s,S.z*=s,v[f]=S}for(var u=0;u<=o;++u){for(var S=v[e-r].clone().multiplyScalar(l[u][0]),h=1;h<=r;++h)S.add(v[e-r+h].clone().multiplyScalar(l[u][h]));t[u]=S}for(u=o+1;u<=c+1;++u)t[u]=new THREE.Vector4(0,0,0);return t},calcKoverI:function(r,a){for(var i=1,n=2;n<=r;++n)i*=n;var c=1;for(n=2;n<=a;++n)c*=n;for(n=2;n<=r-a;++n)c*=n;return i/c},calcRationalCurveDerivatives:function(r){for(var a=r.length,i=[],n=[],c=0;c<a;++c){var o=r[c];i[c]=new THREE.Vector3(o.x,o.y,o.z),n[c]=o.w}for(var t=[],e=0;e<a;++e){var l=i[e].clone();for(c=1;c<=e;++c)l.sub(t[e-c].clone().multiplyScalar(this.calcKoverI(e,c)*n[c]));t[e]=l.divideScalar(n[0])}return t},calcNURBSDerivatives:function(r,a,i,n,c){var o=this.calcBSplineDerivatives(r,a,i,n,c);return this.calcRationalCurveDerivatives(o)},calcSurfacePoint:function(r,a,i,n,c,o,t){for(var e=this.findSpan(r,o,i),l=this.findSpan(a,t,n),v=this.calcBasisFunctions(e,o,r,i),f=this.calcBasisFunctions(l,t,a,n),s=[],u=0;u<=a;++u){s[u]=new THREE.Vector4(0,0,0,0);for(var S=0;S<=r;++S){var h=c[e-r+S][l-a+u].clone(),d=h.w;h.x*=d,h.y*=d,h.z*=d,s[u].add(h.multiplyScalar(v[S]))}}var E=new THREE.Vector4(0,0,0,0);for(u=0;u<=a;++u)E.add(s[u].multiplyScalar(f[u]));return E.divideScalar(E.w),new THREE.Vector3(E.x,E.y,E.z)}};