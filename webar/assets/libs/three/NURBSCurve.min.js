THREE.NURBSCurve=function(t,o,n,s,e){THREE.Curve.call(this),this.degree=t,this.knots=o,this.controlPoints=[],this.startKnot=s||0,this.endKnot=e||this.knots.length-1;for(var i=0;i<n.length;++i){var r=n[i];this.controlPoints[i]=new THREE.Vector4(r.x,r.y,r.z,r.w)}},THREE.NURBSCurve.prototype=Object.create(THREE.Curve.prototype),THREE.NURBSCurve.prototype.constructor=THREE.NURBSCurve,THREE.NURBSCurve.prototype.getPoint=function(t){var o=this.knots[this.startKnot]+t*(this.knots[this.endKnot]-this.knots[this.startKnot]),n=THREE.NURBSUtils.calcBSplinePoint(this.degree,this.knots,this.controlPoints,o);return 1!=n.w&&n.divideScalar(n.w),new THREE.Vector3(n.x,n.y,n.z)},THREE.NURBSCurve.prototype.getTangent=function(t){var o=this.knots[0]+t*(this.knots[this.knots.length-1]-this.knots[0]),n=THREE.NURBSUtils.calcNURBSDerivatives(this.degree,this.knots,this.controlPoints,o,1)[1].clone();return n.normalize(),n};